/*
 * Copyright 2012 Krzysztof Otrebski (krzysztof.otrebski@gmail.com)
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'


sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = "pl.otros.vfs.browser.demo.TestBrowser"
applicationName="OtrosVfsBrowser"


version = "1.0.2"
distZip {
    baseName = "OtrosVfsBrowser"
}

jar {
    baseName = "OtrosVfsBrowser"
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-codec:commons-codec:1.6'
    compile 'org.apache.commons:commons-compress:1.3'
    compile 'commons-configuration:commons-configuration:1.8'
    compile 'commons-digester:commons-digester:2.1'
    compile 'commons-httpclient:commons-httpclient:3.1'
    compile 'commons-io:commons-io:2.1'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'org.apache.commons:commons-vfs2:2.0'
    compile 'com.google.guava:guava:15.0'
    compile 'com.jcraft:jsch:0.1.46'
    compile 'com.jcraft:jzlib:1.1.1'
    compile 'log4j:log4j:1.2.16'
    compile 'com.miglayout:miglayout-swing:4.2'
    compile 'org.swinglabs.swingx:swingx-all:1.6.5-1'
    compile 'com.github.insubstantial:trident:7.1'
    compile 'com.github.insubstantial:substance:7.1'
    compile 'org.slf4j:slf4j-api:1.6.6'
    compile 'org.slf4j:slf4j-jdk14:1.6.6'
    compile 'jcifs:jcifs:1.3.17'
    compile 'net.java.dev.jgoodies:looks:2.1.4'
    compile 'com.intellij:annotations:9.0.4'
    compile 'org.ocpsoft.prettytime:prettytime:3.1.0.Final'
    testCompile 'org.testng:testng:6.7'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.0'
    compile 'com.github.insubstantial:substance:7.2.1'
}
repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
   }
}

test {
    testLogging.showStandardStreams = true
    useTestNG()
//    options {
//        listeners << 'org.uncommons.reportng.HTMLReporter'
//        listeners << 'org.uncommons.reportng.JUnitXMLReporter'
//    }
}

// This task only for SCM administrator.
// Execute external 'gradle' (of the desired version) and execute this task.
task upgradeWrapper(type: Wrapper) { doFirst {
    assert project.hasProperty('newVersion') :
        '''Property 'newVersion' is required for task 'upgradeWrapper'.'''
    assert project.newVersion == gradle.gradleVersion :
        "You invoked Gradle system with version $gradle.gradleVersion instead of desired version $project.newVersion"
} }
upgradeWrapper << {
    gradleVersion = project['newVersion']
    println 'WARNING:  Merge our customizations into the newly-generated wrapper scripts'
}
upgradeWrapper.description = 'Upgrade Gradle version.  For SCM Administrators.'
